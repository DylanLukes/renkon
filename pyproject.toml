[build-system]
requires = ["hatchling", "hatch-build-scripts"]
build-backend = "hatchling.build"

[project]
name = "renkon"
dynamic = ["version"]
description = 'Robust likely invariant analysis over columnar data'
readme = "README.md"
requires-python = ">=3.12"
license = "BSD-3-Clause"
keywords = []
authors = [
    { name = "Dylan Lukes", email = "dlukes@ucsd.edu" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    # Domain Modeling
    "annotated-types", # Annotated type annotations
    "pydantic", # Data modeling and validation
    "pydantic-settings", # Settings management

    # todo: may be able to remove
    "bitarray", # Bit arrays

    # Data Processing
    "aiosql", # SQL
    "numpy", # Numerical computing
    "scikit-learn", # Machine learning
    "scipy", # Scientific computing
    "polars", # Data frames
#    "pandas", # Data frames (not used, but needed for stubs in typings to not be Unknown)
    "pandera", # Data validation
    "pyarrow", # Columnar data format

    # Infrastructure
    # todo replace with structlog
    "loguru", # Logging

    # Miscellaneous
    "lark-parser", # Parsing

    # CLI Interface
    "click", # CLI
    "rich", # Pretty console output

    # Web Interface
    # todo replace with Django (for Channels) maybe?
    "fastapi", # Web framework
    "uvicorn", # ASGI server
    "jinja2", # Templating
    "fasthx", # FastAPI extension for HTMX
]

# These dependencies are helpful to install if using an IDE
# like PyCharm to run tests (with coverage), but are not
# required for the package to run.
optional-dependencies.dev = [
    "coverage-enable-subprocess",
    "coverage[toml]",
    "httpx",
    "pyright",
    "pytest",
    "pytest-mock",
    "pytest-randomly",
    "pytest-rerunfailures",
    "pytest-xdist[psutil]"
]

[project.urls]
Documentation = "https://github.com/DylanLukes/renkon#readme"
Issues = "https://github.com/DylanLukes/renkon/issues"
Source = "https://github.com/DylanLukes/renkon"

[project.scripts]
renkon = "renkon.cli:cli"

# Tool Configurations
# ===================

# Hatch
# -----

[tool.hatch.version]
path = "src/renkon/__about__.py"

[tool.hatch.envs.default.scripts]
lint = [
    "hatch fmt",
    "hatch run types:check"
]

[[tool.hatch.build.hooks.blood-scripts.script]]
out_dir = "out"
commands = [
    "echo 'Hello, world!' > hello.txt",
    "echo 'Goodbye, world!' > goodbye.txt",
]
artifacts = [
    "hello.txt",
    "goodbye.txt",
]

#[tool.hatch.build.hooks.custom]
#path = "scripts/hatch_build.py"

# Hatch Environments
# ------------------

[tool.hatch.envs.types]
extra-dependencies = ["pyright", "pytest"]

[tool.hatch.envs.types.env-vars]
PYRIGHT_PYTHON_FORCE_VERSION = 'latest'

[tool.hatch.envs.types.scripts]
check = "pyright {args:src/renkon tests/}"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"

[tool.hatch.envs.hatch-test]
extra-dependencies = ["httpx"]


# Pytest
# ------

[tool.pytest]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --ignore=typings --ignore=scripts"

# Pyright
# -------

[tool.pyright]
include = ["./src", "./tests"]
stubPath = "./typings/stubs/"

typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true

pythonVersion = "3.12"

# Ruff
# ----

[tool.ruff]
extend = "ruff_defaults.toml"
exclude = [".hatch", "scripts", "typings"]

# Coverage
# --------

[tool.coverage.run]
source_pkgs = ["renkon", "tests"]
branch = true
parallel = true
omit = [
    "src/renkon/__about__.py",
]

[tool.coverage.paths]
hatch_demo = ["src/renkon", "*/renkon/src/renkon"]
tests = ["tests", "*/renkon/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
